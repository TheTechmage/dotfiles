#!/bin/bash
# .files auto-symlinker written by Colton "frostyfrog" Wolkins

set -e # Halt on errors
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P )"
# ln -sn $DIR/.file $HOME/.file
function relink() {
	if [ $# -ne 2 ]; then
		printf >&2 "\e[1;31mrelink doesn't have enough parameters, or has too many (need 2)\e[0m\n"
		return 1
	fi
	file1="$DIR/$1"
	file2="$2"
	if [[ ! -h $file2  && -e $file2 ]]; then
		printf >&2 "\e[1;33m%s is not a symlink!\e[0m\n" "$file2"
		return 0
	fi
#	if [[ -e $1 ]]; then
#		printf >&2 "%s exists, cowardly refusing to clobber it\n" "$1"
#		return 1
#	fi
	if [[ -e $file2 ]]; then
		printf "Removing %s and re-symlinking\n" "$file2"
		unlink $file2
	fi
	printf "Symlinking %s to %s\n" "$1" "$2"
	printf "  ln -sn %s %s" "$file1" "$file2"
	ret=0
	ln -sn "$file1" "$file2" || ret=$?
	if [ $ret -eq 0 ]; then
		printf " [\e[1;32mSUCCESS\e[0m]\n"
	else
		printf " [\e[1;31mFAILURE\e[0m]\n"
	fi
}

#relink .tmp
relink .nanorc $HOME/.nanorc
relink .vimrc $HOME/.vimrc
relink .screenrc $HOME/.screenrc
relink .tmux.conf $HOME/.tmux.conf
relink .Xdefaults $HOME/.Xdefaults
relink .Xresources $HOME/.Xresources
relink .zshrc $HOME/.zshrc
relink .oh-my-zsh $HOME/.oh-my-zsh
relink .bashrc $HOME/.bashrc
relink bin $HOME/bin
relink .alias $HOME/.alias
relink .dircolors $HOME/.dircolors
relink .conky $HOME/.conky
relink .conkyrc $HOME/.conkyrc


exit # Exit so we don't hit our template line
relink REPLACE $HOME/REPLACE

# vim: set ai ft=sh :
